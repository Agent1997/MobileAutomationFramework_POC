package com.rommelmalked.qa.automation.mobile_automation.mobile_automation_poc.framework.server;

import com.rommelmalked.qa.automation.mobile_automation.mobile_automation_poc.framework.utilities.Utils;
import io.appium.java_client.service.local.AppiumDriverLocalService;
import io.appium.java_client.service.local.AppiumServiceBuilder;

import java.io.File;


/**
 * This is to simplify initializing appium server
 * by creating easily understandable functions.
 *
 * @author Agent1997
 */

/*
TODO Focus on improving this Appium server class
TODO Find out how to not log on the console
 */

public class AppiumServer {
    private AppiumServiceBuilder serviceBuilder = new AppiumServiceBuilder();
    private AppiumDriverLocalService server;
    private int port;

    /***
     *This default constructor will use the port randomly generated by Utils.getAvailablePort
     */
    public AppiumServer() {
        this.port = Utils.getAvailablePort();
        this.serviceBuilder.usingPort(port)
                .withLogFile(new File(Utils.getProjectDirectory() +"appiumLogs" + Utils.generateFileName("logs")));
//        serviceBuilder.withArgument(ServerConfigFlags.NODE_CONFIG,"path to node config");
        this.server = AppiumDriverLocalService.buildService(serviceBuilder);
    }

    public AppiumServer(int port) {
        this.port = port;
        this.serviceBuilder.usingPort(port);
        this.server = AppiumDriverLocalService.buildService(serviceBuilder);
    }

    public void startServer() {
        this.server.start();
        this.server.clearOutPutStreams();
    }

    public void stopServer() {
        this.server.stop();
    }

    public boolean isRunning() {
        return this.server.isRunning();
    }

    public AppiumDriverLocalService getServer() {
        return this.server;
    }
}
